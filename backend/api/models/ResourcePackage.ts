/**
 * ODIN Fleet API
 * API to access Odin Fleet, empowering developers to deploy gameservers all around the world in just a few lines of code.  To authenticate, users must send their email, password, and session ID to the **[`/api/auth`](/operations/getAuthToken)** endpoint. Upon successful authentication, an API token will be provided. This token should be included in the `Authorization` header as a Bearer token for all subsequent requests.      Alternatively, you can copy your API key directly from our **[`console`](https://console.4players.io)** by opening any app, and then going to **Settings -> API Keys**.
 *
 * OpenAPI spec version: 0.8.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { ResourcePackageType } from '../models/ResourcePackageType.ts';
import { HttpFile } from '../http/http.ts';

export class ResourcePackage {
    /**
    * The id of the resource package
    */
    'id': number;
    /**
    * The name of the resource package
    */
    'name': string;
    /**
    * The slug of the resource package
    */
    'slug': string;
    /**
    * The type of the resource package
    */
    'type': ResourcePackageType;
    /**
    * The maximum CPU of the resource package
    */
    'cpuLimit': string;
    /**
    * The minimum CPU of the resource package
    */
    'cpuReservation': string;
    /**
    * The maximum memory in bytes of the resource package
    */
    'memoryLimitBytes': number;
    /**
    * The maximum memory in mebibytes (MiB) of the resource package
    */
    'memoryLimitMiB': number;
    /**
    * The maximum memory in a human-readable format
    */
    'memoryLimitFileSizeString': string;
    /**
    * The minimum memory in bytes of the resource package
    */
    'memoryReservationBytes': number;
    /**
    * The minimum memory in mebibytes (MiB) of the resource package
    */
    'memoryReservationMiB': number;
    /**
    * The minimum memory in a human-readable format
    */
    'memoryReservationFileSizeString': string;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "number",
            "format": ""
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "slug",
            "baseName": "slug",
            "type": "string",
            "format": ""
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "ResourcePackageType",
            "format": ""
        },
        {
            "name": "cpuLimit",
            "baseName": "cpuLimit",
            "type": "string",
            "format": ""
        },
        {
            "name": "cpuReservation",
            "baseName": "cpuReservation",
            "type": "string",
            "format": ""
        },
        {
            "name": "memoryLimitBytes",
            "baseName": "memoryLimitBytes",
            "type": "number",
            "format": ""
        },
        {
            "name": "memoryLimitMiB",
            "baseName": "memoryLimitMiB",
            "type": "number",
            "format": ""
        },
        {
            "name": "memoryLimitFileSizeString",
            "baseName": "memoryLimitFileSizeString",
            "type": "string",
            "format": ""
        },
        {
            "name": "memoryReservationBytes",
            "baseName": "memoryReservationBytes",
            "type": "number",
            "format": ""
        },
        {
            "name": "memoryReservationMiB",
            "baseName": "memoryReservationMiB",
            "type": "number",
            "format": ""
        },
        {
            "name": "memoryReservationFileSizeString",
            "baseName": "memoryReservationFileSizeString",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return ResourcePackage.attributeTypeMap;
    }

    public constructor() {
    }
}


