/**
 * ODIN Fleet API
 * API to access Odin Fleet, empowering developers to deploy gameservers all around the world in just a few lines of code.  To authenticate, users must send their email, password, and session ID to the **[`/api/auth`](/operations/getAuthToken)** endpoint. Upon successful authentication, an API token will be provided. This token should be included in the `Authorization` header as a Bearer token for all subsequent requests.      Alternatively, you can copy your API key directly from our **[`console`](https://console.4players.io)** by opening any app, and then going to **Settings -> API Keys**.
 *
 * OpenAPI spec version: 0.8.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { BinaryStatus } from '../models/BinaryStatus.ts';
import { BinaryType } from '../models/BinaryType.ts';
import { DockerCompose } from '../models/DockerCompose.ts';
import { DockerImage } from '../models/DockerImage.ts';
import { OperatingSystem } from '../models/OperatingSystem.ts';
import { Steam } from '../models/Steam.ts';
import { ZipFile } from '../models/ZipFile.ts';
import { HttpFile } from '../http/http.ts';

export class Binary {
    /**
    * The id of the binary
    */
    'id': number;
    /**
    * The app id of the binary
    */
    'appId': number;
    /**
    * The app id of the binary
    */
    'name': string;
    /**
    * The version of the binary
    */
    'version': string;
    /**
    * The type of the binary
    */
    'type': BinaryType;
    /**
    * The operating system of the binary
    */
    'os': OperatingSystem;
    /**
    * Indicates if the binary is under maintenance
    */
    'maintenance': boolean;
    /**
    * The current status of the binary
    */
    'status': BinaryStatus;
    /**
    * An optional message returned by the build process
    */
    'statusMessage': string | null;
    /**
    * The current progress percentage of the image build (0-100).
    */
    'progress'?: number | null;
    /**
    * A message describing the current build step.
    */
    'progressMessage'?: string | null;
    /**
    * Indicates whether the binary is currently in use
    */
    'inUse': boolean;
    /**
    * The docker image of the binary
    */
    'dockerImage'?: DockerImage;
    /**
    * The docker compose file of the binary
    */
    'dockerCompose'?: DockerCompose;
    /**
    * The ZIP file of the binary
    */
    'zipFile'?: ZipFile;
    /**
    * The steam of the binary
    */
    'steam'?: Steam;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "number",
            "format": ""
        },
        {
            "name": "appId",
            "baseName": "appId",
            "type": "number",
            "format": ""
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "version",
            "baseName": "version",
            "type": "string",
            "format": ""
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "BinaryType",
            "format": ""
        },
        {
            "name": "os",
            "baseName": "os",
            "type": "OperatingSystem",
            "format": ""
        },
        {
            "name": "maintenance",
            "baseName": "maintenance",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "BinaryStatus",
            "format": ""
        },
        {
            "name": "statusMessage",
            "baseName": "statusMessage",
            "type": "string",
            "format": ""
        },
        {
            "name": "progress",
            "baseName": "progress",
            "type": "number",
            "format": ""
        },
        {
            "name": "progressMessage",
            "baseName": "progressMessage",
            "type": "string",
            "format": ""
        },
        {
            "name": "inUse",
            "baseName": "inUse",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "dockerImage",
            "baseName": "dockerImage",
            "type": "DockerImage",
            "format": ""
        },
        {
            "name": "dockerCompose",
            "baseName": "dockerCompose",
            "type": "DockerCompose",
            "format": ""
        },
        {
            "name": "zipFile",
            "baseName": "zipFile",
            "type": "ZipFile",
            "format": ""
        },
        {
            "name": "steam",
            "baseName": "steam",
            "type": "Steam",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return Binary.attributeTypeMap;
    }

    public constructor() {
    }
}


