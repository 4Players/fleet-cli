/**
 * ODIN Fleet API
 * API to access Odin Fleet, empowering developers to deploy gameservers all around the world in just a few lines of code.  To authenticate, users must send their email, password, and session ID to the **[`/api/auth`](/operations/getAuthToken)** endpoint. Upon successful authentication, an API token will be provided. This token should be included in the `Authorization` header as a Bearer token for all subsequent requests.      Alternatively, you can copy your API key directly from our **[`console`](https://console.4players.io)** by opening any app, and then going to **Settings -> API Keys**.
 *
 * OpenAPI spec version: 0.8.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http.ts';

export class Location {
    /**
    * The name of the city
    */
    'city': string;
    /**
    * The display-friendly name of the city
    */
    'cityDisplay': string;
    /**
    * The continent name
    */
    'continent': string;
    /**
    * The country name
    */
    'country': string;
    /**
    * Indicates if the location is password protected
    */
    'isProtected': boolean;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "city",
            "baseName": "city",
            "type": "string",
            "format": ""
        },
        {
            "name": "cityDisplay",
            "baseName": "cityDisplay",
            "type": "string",
            "format": ""
        },
        {
            "name": "continent",
            "baseName": "continent",
            "type": "string",
            "format": ""
        },
        {
            "name": "country",
            "baseName": "country",
            "type": "string",
            "format": ""
        },
        {
            "name": "isProtected",
            "baseName": "isProtected",
            "type": "boolean",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return Location.attributeTypeMap;
    }

    public constructor() {
    }
}
