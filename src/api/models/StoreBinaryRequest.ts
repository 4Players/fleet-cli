/**
 * ODIN Fleet API
 * API to access Odin Fleet, empowering developers to deploy gameservers all around the world in just a few lines of code.  To authenticate, users must send their email, password, and session ID to the **[`/api/auth`](/operations/getAuthToken)** endpoint. Upon successful authentication, an API token will be provided. This token should be included in the `Authorization` header as a Bearer token for all subsequent requests.      Alternatively, you can copy your API key directly from our **[`console`](https://console.4players.io)** by opening any app, and then going to **Settings -> API Keys**.
 *
 * OpenAPI spec version: 0.8.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { BinaryType } from '../models/BinaryType.ts';
import { CreateUpdateDockerImage } from '../models/CreateUpdateDockerImage.ts';
import { CreateUpdateSteam } from '../models/CreateUpdateSteam.ts';
import { DockerCompose } from '../models/DockerCompose.ts';
import { OperatingSystem } from '../models/OperatingSystem.ts';
import { ZipFile } from '../models/ZipFile.ts';
import { HttpFile } from '../http/http.ts';

export class StoreBinaryRequest {
    /**
    * The name of the binary
    */
    'name': string;
    /**
    * The version of the binary
    */
    'version': string;
    /**
    * The type of the binary
    */
    'type': BinaryType;
    /**
    * The operating system of the binary
    */
    'os': OperatingSystem;
    /**
    * The docker compose settings
    */
    'dockerCompose'?: DockerCompose;
    /**
    * The zip file settings
    */
    'zipFile'?: ZipFile;
    /**
    * The steam settings
    */
    'steam'?: CreateUpdateSteam;
    /**
    * The docker image settings
    */
    'dockerImage'?: CreateUpdateDockerImage;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "version",
            "baseName": "version",
            "type": "string",
            "format": ""
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "BinaryType",
            "format": ""
        },
        {
            "name": "os",
            "baseName": "os",
            "type": "OperatingSystem",
            "format": ""
        },
        {
            "name": "dockerCompose",
            "baseName": "dockerCompose",
            "type": "DockerCompose",
            "format": ""
        },
        {
            "name": "zipFile",
            "baseName": "zipFile",
            "type": "ZipFile",
            "format": ""
        },
        {
            "name": "steam",
            "baseName": "steam",
            "type": "CreateUpdateSteam",
            "format": ""
        },
        {
            "name": "dockerImage",
            "baseName": "dockerImage",
            "type": "CreateUpdateDockerImage",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return StoreBinaryRequest.attributeTypeMap;
    }

    public constructor() {
    }
}



